from abc import ABC, abstractmethod

from fs import config
from fs.logical_to_physical_block_ref import LogicalToPhysicalBlockRef
from fs.physical_block import PhysicalBlock


class BaseDisk(ABC):
    def __init__(self, block_size_bytes=config.BLOCK_SIZE_BYTES):
        self._block_size_bytes = block_size_bytes
        pass

    @abstractmethod
    def get_block_by_id(self, bid:int) -> PhysicalBlock:
        pass

    @abstractmethod
    def read_block_by_id(self, bid:int):
        pass

    @abstractmethod
    def free_ref(self, ref: LogicalToPhysicalBlockRef):
        pass

    @abstractmethod
    def write_block_by_id(self, bid: int, offset, data):
        pass

    @abstractmethod
    def allocate_block(self):
        pass

    @abstractmethod
    def duplicate_physical_block(self, physical_block: PhysicalBlock):
        pass
