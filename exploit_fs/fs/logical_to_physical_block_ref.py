from fs.seq import RunningSequence


class LogicalToPhysicalBlockRef(RunningSequence):
    def __init__(self, logical_block_id, end_offset, physical_block_id, physical_block_start_offset,
                 physical_block_end_offset, ref_id: int=None):

        self.ref_id = self.get_new_id() if ref_id is None else ref_id
        self.update_created_bid(self.ref_id)

        self.logical_block_id = logical_block_id
        self.end_offset: int = end_offset
        self.physical_block_id: int = physical_block_id
        self.physical_block_start_offset = physical_block_start_offset
        self.physical_block_end_offset = physical_block_end_offset

    def copy(self, new_logical_block_id=None):
        return LogicalToPhysicalBlockRef(new_logical_block_id if new_logical_block_id is not None else self.logical_block_id, self.end_offset, self.physical_block_id, self.physical_block_start_offset, self.physical_block_end_offset)
    @property
    def length(self):
        return self.physical_block_end_offset - self.physical_block_start_offset

    def __repr__(self) -> str:
        return f"LtoPRef - {self.__dict__}"
