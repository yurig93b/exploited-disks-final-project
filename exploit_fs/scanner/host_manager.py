from pymongo import MongoClient

from fs.config import DB, COLLECTION_IPS


class HostManager(object):
    STATUS_PENDING = 'pending'
    STATUS_DEAD = 'dead'
    STATUS_FREE = 'free'
    STATUS_USED = 'used'

    FIELD_IP = 'ip'
    FIELD_COUNTRY = 'country'
    FIELD_STATUS = 'status'
    FIELD_MS = 'ms'

    def __init__(self):
        self._mongo = MongoClient()
        self._col = self._mongo.get_database(DB).get_collection(COLLECTION_IPS)

    def get_pending_hosts(self):
        return self._col.find({self.FIELD_STATUS: self.STATUS_PENDING})

    def get_fastest_free_host(self):
        return self._col.find_one({self.FIELD_STATUS: self.STATUS_FREE}, sort=[(self.FIELD_MS, 1)])

    def get_slowest_free_host(self):
        return self._col.find_one({self.FIELD_STATUS: self.STATUS_FREE}, sort=[(self.FIELD_MS, -1)])

    def insert_host_as_pending(self, addr: str, ms: float = 0):
        return self._col.insert_one({self.FIELD_STATUS: self.STATUS_PENDING,
                                     self.FIELD_MS: ms,
                                     self.FIELD_IP: addr})

    def set_host_as_free(self, addr):
        return self._col.update_many({self.FIELD_IP: addr}, {"$set": {self.FIELD_STATUS: self.STATUS_FREE}})

    def set_host_as_free_ms(self, addr, ms:float):
        return self._col.update_many({self.FIELD_IP: addr}, {"$set": {self.FIELD_STATUS: self.STATUS_FREE, self.FIELD_MS: ms}})

    def set_host_as_used(self, addr: str):
        return self._col.update_many({self.FIELD_IP: addr}, {"$set": {self.FIELD_STATUS: self.STATUS_USED}})
